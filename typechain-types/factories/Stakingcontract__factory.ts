/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Stakingcontract,
  StakingcontractInterface,
} from "../Stakingcontract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "StakingTokenaddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "StakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "boredApeOwnerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "createStake",
    outputs: [
      {
        internalType: "uint256",
        name: "indexx",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakerTotalBal",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "personStake",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalstake",
            type: "uint256",
          },
        ],
        internalType: "struct stakingcontract.TotalBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stakeamount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staketime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "laststakeTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "haveStaked",
            type: "bool",
          },
        ],
        internalType: "struct stakingcontract.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getYieldUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "day",
        type: "uint256",
      },
    ],
    name: "rewardperday",
    outputs: [
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273bc4ca0eda7647a8ab7c2061c2e118a18a936f13d600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006008553480156200006b57600080fd5b5060405162001d8238038062001d828339818101604052810190620000919190620001e3565b620000b1620000a56200010060201b60201c565b6200010860201b60201c565b6001808190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200025d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001dd8162000243565b92915050565b600060208284031215620001f657600080fd5b60006200020684828501620001cc565b91505092915050565b60006200021c8262000223565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024e816200020f565b81146200025a57600080fd5b50565b611b15806200026d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063624153ae1161008c5780638da5cb5b116100665780638da5cb5b14610204578063be5af96614610222578063f298bc4f14610240578063f2fde38b14610270576100cf565b8063624153ae146101ac578063715018a6146101ca5780637ce5c20f146101d4576100cf565b80631bf6ddae146100d45780632e1a7d4d1461010457806335c5e7221461013457806343352d611461015257806359a97f93146101705780635f576db61461018e575b600080fd5b6100ee60048036038101906100e9919061133c565b61028c565b6040516100fb919061174a565b60405180910390f35b61011e6004803603810190610119919061133c565b610798565b60405161012b91906115fe565b60405180910390f35b61013c610abc565b604051610149919061174a565b60405180910390f35b61015a610b0b565b6040516101679190611714565b60405180910390f35b610178610bf1565b6040516101859190611583565b60405180910390f35b610196610c17565b6040516101a3919061174a565b60405180910390f35b6101b4610c1d565b6040516101c1919061172f565b60405180910390f35b6101d2610cd4565b005b6101ee60048036038101906101e991906112ea565b610d5c565b6040516101fb919061174a565b60405180910390f35b61020c610fc4565b6040516102199190611583565b60405180910390f35b61022a610fed565b6040516102379190611619565b60405180910390f35b61025a6004803603810190610255919061133c565b611013565b604051610267919061174a565b60405180910390f35b61028a600480360381019061028591906112ea565b61105b565b005b600081606481116102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c990611654565b60405180910390fd5b336001600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103309190611583565b60206040518083038186803b15801561034857600080fd5b505afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190611365565b101561038b57600080fd5b83600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103e79190611583565b60206040518083038186803b1580156103ff57600080fd5b505afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190611365565b1015610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90611694565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160040160006101000a81548160ff021916908315150217905550848160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160020181905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161058c9392919061159e565b602060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190611313565b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106b09190611776565b816001018190555085600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107079190611776565b925050819055504282600301819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516107879291906115d5565b60405180910390a150505050919050565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600115158160040160009054906101000a900460ff16151514610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b906116f4565b60405180910390fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611674565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154841061093f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610936906116b4565b60405180910390fd5b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098a9190611857565b816001018190555083600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e19190611857565b9250508190555060008260030154426109fa9190611857565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610a599291906115d5565b602060405180830381600087803b158015610a7357600080fd5b505af1158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611313565b610ab457600080fd5b505050919050565b600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015491505090565b610b1361121f565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b610c25611266565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905090565b610cdc611153565b73ffffffffffffffffffffffffffffffffffffffff16610cfa610fc4565b73ffffffffffffffffffffffffffffffffffffffff1614610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d47906116d4565b60405180910390fd5b610d5a600061115b565b565b60006203f480600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610db09190611857565b10610f7c576000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610e059190611857565b9050610e1081611013565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e5e9190611776565b925050819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548160010181905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492505050610fbf565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090506203f480831061105057601e600a84600a61103591906117fd565b61103f91906117fd565b61104991906117cc565b9050611055565b600090505b50919050565b611063611153565b73ffffffffffffffffffffffffffffffffffffffff16611081610fc4565b73ffffffffffffffffffffffffffffffffffffffff16146110d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ce906116d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113e90611634565b60405180910390fd5b6111508161115b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000813590506112a581611a9a565b92915050565b6000815190506112ba81611ab1565b92915050565b6000813590506112cf81611ac8565b92915050565b6000815190506112e481611ac8565b92915050565b6000602082840312156112fc57600080fd5b600061130a84828501611296565b91505092915050565b60006020828403121561132557600080fd5b6000611333848285016112ab565b91505092915050565b60006020828403121561134e57600080fd5b600061135c848285016112c0565b91505092915050565b60006020828403121561137757600080fd5b6000611385848285016112d5565b91505092915050565b6113978161188b565b82525050565b6113a68161188b565b82525050565b6113b58161189d565b82525050565b6113c48161189d565b82525050565b6113d3816118d3565b82525050565b60006113e6602683611765565b91506113f182611955565b604082019050919050565b6000611409600c83611765565b9150611414826119a4565b602082019050919050565b600061142c601f83611765565b9150611437826119cd565b602082019050919050565b600061144f601183611765565b915061145a826119f6565b602082019050919050565b6000611472601a83611765565b915061147d82611a1f565b602082019050919050565b6000611495602083611765565b91506114a082611a48565b602082019050919050565b60006114b8601483611765565b91506114c382611a71565b602082019050919050565b60a0820160008201516114e46000850182611565565b5060208201516114f7602085018261138e565b50604082015161150a6040850182611565565b50606082015161151d6060850182611565565b50608082015161153060808501826113ac565b50505050565b60408201600082015161154c600085018261138e565b50602082015161155f6020850182611565565b50505050565b61156e816118c9565b82525050565b61157d816118c9565b82525050565b6000602082019050611598600083018461139d565b92915050565b60006060820190506115b3600083018661139d565b6115c0602083018561139d565b6115cd6040830184611574565b949350505050565b60006040820190506115ea600083018561139d565b6115f76020830184611574565b9392505050565b600060208201905061161360008301846113bb565b92915050565b600060208201905061162e60008301846113ca565b92915050565b6000602082019050818103600083015261164d816113d9565b9050919050565b6000602082019050818103600083015261166d816113fc565b9050919050565b6000602082019050818103600083015261168d8161141f565b9050919050565b600060208201905081810360008301526116ad81611442565b9050919050565b600060208201905081810360008301526116cd81611465565b9050919050565b600060208201905081810360008301526116ed81611488565b9050919050565b6000602082019050818103600083015261170d816114ab565b9050919050565b600060a08201905061172960008301846114ce565b92915050565b60006040820190506117446000830184611536565b92915050565b600060208201905061175f6000830184611574565b92915050565b600082825260208201905092915050565b6000611781826118c9565b915061178c836118c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117c1576117c06118f7565b5b828201905092915050565b60006117d7826118c9565b91506117e2836118c9565b9250826117f2576117f1611926565b5b828204905092915050565b6000611808826118c9565b9150611813836118c9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561184c5761184b6118f7565b5b828202905092915050565b6000611862826118c9565b915061186d836118c9565b9250828210156118805761187f6118f7565b5b828203905092915050565b6000611896826118a9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118de826118e5565b9050919050565b60006118f0826118a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6d6f6e696d756d7374616b650000000000000000000000000000000000000000600082015250565b7f796f7520646f6e74206861766520757020746f207468617420616d6f756e7400600082015250565b7f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f696e73756666696369656e74207374616b656420616d6f756e74000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6e6f206d6f6e657920696e2074686520706f6f6c000000000000000000000000600082015250565b611aa38161188b565b8114611aae57600080fd5b50565b611aba8161189d565b8114611ac557600080fd5b50565b611ad1816118c9565b8114611adc57600080fd5b5056fea26469706673582212208ffe4b83530314378ab4497b7411d42e9f8b648ddc676d9f53967a862dfa25d964736f6c63430008040033";

type StakingcontractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingcontractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Stakingcontract__factory extends ContractFactory {
  constructor(...args: StakingcontractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    StakingTokenaddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Stakingcontract> {
    return super.deploy(
      StakingTokenaddress,
      overrides || {}
    ) as Promise<Stakingcontract>;
  }
  getDeployTransaction(
    StakingTokenaddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(StakingTokenaddress, overrides || {});
  }
  attach(address: string): Stakingcontract {
    return super.attach(address) as Stakingcontract;
  }
  connect(signer: Signer): Stakingcontract__factory {
    return super.connect(signer) as Stakingcontract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingcontractInterface {
    return new utils.Interface(_abi) as StakingcontractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Stakingcontract {
    return new Contract(address, _abi, signerOrProvider) as Stakingcontract;
  }
}
