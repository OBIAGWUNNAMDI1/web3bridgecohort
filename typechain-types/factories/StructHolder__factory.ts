/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StructHolder, StructHolderInterface } from "../StructHolder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct structHolder.owner",
        name: "",
        type: "tuple",
      },
    ],
    name: "out",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
        ],
        internalType: "struct structHolder.owner",
        name: "a",
        type: "tuple",
      },
    ],
    name: "SetStruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "indexx",
        type: "uint256",
      },
    ],
    name: "getStruct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
        ],
        internalType: "struct structHolder.owner",
        name: "ST",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5061092f806100256000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063641b533a1461003b578063cdfa849514610057575b600080fd5b6100556004803603810190610050919061044d565b610087565b005b610071600480360381019061006c919061048e565b61014b565b60405161007e9190610645565b60405180910390f35b60008060006001548152602001908152602001600020905081600001518160000190805190602001906100bb929190610269565b508160200151816001018190555081604001518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1635d729050c375d5a0999e86cd880b4376c99c26013100f563ffd33985d00088160405161013f9190610667565b60405180910390a15050565b6101536102ef565b600080838152602001908152602001600020604051806060016040529081600082018054610180906107b8565b80601f01602080910402602001604051908101604052809291908181526020018280546101ac906107b8565b80156101f95780601f106101ce576101008083540402835291602001916101f9565b820191906000526020600020905b8154815290600101906020018083116101dc57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b828054610275906107b8565b90600052602060002090601f01602090048101928261029757600085556102de565b82601f106102b057805160ff19168380011785556102de565b828001600101855582156102de579182015b828111156102dd5782518255916020019190600101906102c2565b5b5090506102eb9190610326565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b8082111561033f576000816000905550600101610327565b5090565b6000610356610351846106ae565b610689565b90508281526020810184848401111561036e57600080fd5b610379848285610776565b509392505050565b600081359050610390816108cb565b92915050565b600082601f8301126103a757600080fd5b81356103b7848260208601610343565b91505092915050565b6000606082840312156103d257600080fd5b6103dc6060610689565b9050600082013567ffffffffffffffff8111156103f857600080fd5b61040484828501610396565b600083015250602061041884828501610438565b602083015250604061042c84828501610381565b60408301525092915050565b600081359050610447816108e2565b92915050565b60006020828403121561045f57600080fd5b600082013567ffffffffffffffff81111561047957600080fd5b610485848285016103c0565b91505092915050565b6000602082840312156104a057600080fd5b60006104ae84828501610438565b91505092915050565b6104c08161073a565b82525050565b60006104d1826106f4565b6104db81856106ff565b93506104eb818560208601610785565b6104f4816108ad565b840191505092915050565b6000815461050c816107b8565b61051681866106ff565b94506001821660008114610531576001811461054357610576565b60ff1983168652602086019350610576565b61054c856106df565b60005b8381101561056e5781548189015260018201915060208101905061054f565b808801955050505b50505092915050565b6000606083016000830151848203600086015261059c82826104c6565b91505060208301516105b16020860182610636565b5060408301516105c460408601826104b7565b508091505092915050565b600060608301600080840185830360008701526105ec83826104ff565b925050600184015490506105ff81610804565b61060c6020870182610636565b506002840154905061061d816107ea565b61062a60408701826104b7565b50819250505092915050565b61063f8161076c565b82525050565b6000602082019050818103600083015261065f818461057f565b905092915050565b6000602082019050818103600083015261068181846105cf565b905092915050565b60006106936106a4565b905061069f828261081e565b919050565b6000604051905090565b600067ffffffffffffffff8211156106c9576106c861087e565b5b6106d2826108ad565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107458261074c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156107a3578082015181840152602081019050610788565b838111156107b2576000848401525b50505050565b600060028204905060018216806107d057607f821691505b602082108114156107e4576107e361084f565b5b50919050565b60006107fd6107f8836108be565b610710565b9050919050565b6000610817610812836108be565b610730565b9050919050565b610827826108ad565b810181811067ffffffffffffffff821117156108465761084561087e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160001c9050919050565b6108d48161073a565b81146108df57600080fd5b50565b6108eb8161076c565b81146108f657600080fd5b5056fea2646970667358221220d85fc282b0dcc59c0e96c4d3d6443f4158d894ce7b6cf2ec43b3d4d6b48e175464736f6c63430008040033";

type StructHolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StructHolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StructHolder__factory extends ContractFactory {
  constructor(...args: StructHolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StructHolder> {
    return super.deploy(overrides || {}) as Promise<StructHolder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StructHolder {
    return super.attach(address) as StructHolder;
  }
  connect(signer: Signer): StructHolder__factory {
    return super.connect(signer) as StructHolder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StructHolderInterface {
    return new utils.Interface(_abi) as StructHolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StructHolder {
    return new Contract(address, _abi, signerOrProvider) as StructHolder;
  }
}
